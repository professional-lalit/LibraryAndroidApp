apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.library.app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        buildConfigField 'String', 'BASE_URL', baseUrl
        testInstrumentationRunner "com.library.app.utils.MockRunner"
        testFunctionalTest true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def coroutines_version = "1.1.1"
    def retrofit2_version = "2.6.0"
    def room_version = "2.2.5"
    def okHttpVersion = "4.2.1"
    def dagger2_version = '2.24'
    def multidex_version = "2.0.1"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "com.google.android.material:material:${designSupportVersion}"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // ***************************************** Testing *********************************************************
    testImplementation 'junit:junit:4.13'
    // Execute tasks synchronously for testing
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC3'
    // Testing coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0-M1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
    // UI Tests
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:3.2.0"
    androidTestImplementation ("org.awaitility:awaitility:4.0.1"){
        exclude group: 'org.hamcrest'
    }
    // ***************************************** Testing *********************************************************

    // *****************************  Networking  ******************************************************
    //Gson
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    // OKHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    // *****************************  Networking  ******************************************************

    // ***************************** Kotlin Coroutines *************************************************
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
// ***************************** Kotlin Coroutines *************************************************

// ***************************** Dependency Injection - Dagger 2 *************************************************
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
// ***************************** Dependency Injection - Dagger 2 *************************************************


    //*************************** Room *************************************************************************
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //*************************** Room *************************************************************************

    //Glide - to load thumbnail from local storage
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    // ***************************** Firebase ********************************************
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    // ***************************** Firebase ********************************************

}